version: '3.8'

name: btc-rate

services:
  feature-coin:
    container_name: feature-coin
    depends_on:
      - rabbitmq
    build:
      context: src/.
      dockerfile: coin/Dockerfile
    volumes:
      - coinData:/app/coin/data
      - logs:/app/coin/logs
    ports:
      - "8080:8080"
    environment:
      - RABBITMQ_HOST=rabbitmq:5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=admin

  feature-campaign:
    container_name: feature-campaign
    depends_on:
      - kafka
    build:
      context: src/.
      dockerfile: campaign/Dockerfile
    volumes:
      - campaignData:/app/campaign/data
      - logs:/app/campaign/logs
    ports:
      - "8081:8081"
    environment:
      - COIN_HOST=feature-coin:8080
      - COIN_SCHEMA=http
      - SENDGRID_KEY=your_key
      - SENDGRID_SENDER_EMAIL=your_email
      - SENDGRID_SENDER_NAME=your_name
      - KAFKA_HOST=kafka:9092

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:3.8'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:3.4'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - 'kafka:/bitnami/kafka/data'
    depends_on:
      - zookeeper

volumes:
  coinData:
  campaignData:
  logs:
  rabbitmq:
  kafka:
